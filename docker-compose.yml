services:
  directus:
    image: directus/directus:11.3.5
    ports:
      - 8055:8055
    volumes:
      - ./database:/directus/database
      - ./uploads:/directus/uploads
      - ./extensions:/directus/extensions
    environment:
      ACCESS_TOKEN_TTL: "30d"
      SECRET: "replace-with-secure-random-value"
      ADMIN_EMAIL: "yvzyldrm@gmail.com"
      ADMIN_PASSWORD: "blackrock"
      DB_CLIENT: "pg"
      DB_HOST: "postgres"
      DB_PORT: "5432"
      DB_USER: "postgres"
      DB_PASS: "1"
      DB_NAME: "directus_db"
      WEBSOCKETS_ENABLED: "true"
      CORS_ENABLED: "true"
      CORS_ORIGIN: "http://nuxt:3000,http://localhost:3000,http://127.0.0.1:3000,http://reviews.local"
      CORS_METHODS: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
      CORS_ALLOWED_HEADERS: "Content-Type,Authorization"
      CORS_EXPOSED_HEADERS: "Content-Range"
      CORS_CREDENTIALS: "true"
      CORS_MAX_AGE: "18000"
    env_file:
      - .env
    networks:
      app_network:
        aliases:
          - api.reviews.local

  redis:
    image: redis:7.4-alpine
    ports:
      - 6379:6379
    volumes:
      - redis_data:/redis-data
    command: redis-server --appendonly yes
    networks:
      - app_network

  nuxt:
    image: node:23
    container_name: nuxt
    working_dir: /app
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    command: sh -c "npm install && npm run dev"
    depends_on:
      directus:
        condition: service_started
    networks:
      - app_network
    environment:
      - NUXT_PUBLIC_DIRECTUS_URL=http://api.reviews.local

  python-service:
    image: python:3.12-slim
    container_name: python-service
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import http.client; conn = http.client.HTTPConnection('localhost:8000'); conn.request('GET', '/health'); response = conn.getresponse(); exit(1) if response.status != 200 else exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
    working_dir: /app
    build:
      context: ./python-service
      dockerfile: Dockerfile
    volumes:
      - ./python-service:/app
    command: /bin/sh -c "pip install -r requirements.txt && cron -f"
    depends_on:
      - directus
    networks:
      - app_network
    environment:
      - DIRECTUS_SERVER_URL=http://directus:8055
      - DIRECTUS_URL=http://api.reviews.local:8055
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1

  postgres:
    image: postgres:17
    environment:
      POSTGRES_DB: directus_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1
    ports:
      - 5432:5432
    volumes:
      - ./postgres_data:/var/lib/postgresql/data  # Ensure this path exists on your host machine
    networks:
      - app_network

  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx-proxy-manager
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:81"]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - ./nginx:/data
      - ./letsencrypt:/etc/letsencrypt
    networks:
      - app_network

volumes:
  redis_data:
    name: reviews_redis
  postgres_data:
    name: reviews_postgres

networks:
  app_network:
    name: reviews_network
    driver: bridge
